#!/usr/bin/make -f

include /usr/share/dpkg/default.mk

COMMON_FLAGS = VERBOSE=1 USE_SYSTEM_LLVM=1 USE_SYSTEM_LIBUNWIND=1 \
	USE_SYSTEM_READLINE=1 USE_SYSTEM_PCRE=1 USE_SYSTEM_BLAS=1 USE_SYSTEM_LAPACK=1 \
	USE_SYSTEM_FFTW=1 USE_SYSTEM_GRISU=1 USE_SYSTEM_GMP=1 USE_SYSTEM_ARPACK=1 \
	USE_SYSTEM_SUITESPARSE=1 USE_SYSTEM_RMATH=1 USE_SYSTEM_MPFR=1 NO_GIT=1 \
        USE_BLAS64=0 LIBBLASNAME=libblas.so.3 LIBLAPACKNAME=liblapack.so.3 \
	LLVM_CONFIG=/usr/bin/llvm-config-3.3 LLVM_LLC=llc-3.3 MULTIARCH_INSTALL=1 \
	JULIA_CPU_TARGET=core2 TAGGED_RELEASE_BANNER="Official http://julialang.org release"

# Openlibm does not compile on non-x86 archs
ifeq (,$(findstring $(DEB_HOST_ARCH_CPU),i386 amd64))
COMMON_FLAGS += USE_SYSTEM_LIBM=1
endif

%:
	dh $@ --parallel

override_dh_auto_build-arch:
	make $(COMMON_FLAGS) prefix=$(abspath debian/tmp/usr) all

override_dh_auto_build-indep:
	make -C doc html

override_dh_auto_test-arch:

override_dh_auto_test-indep:

override_dh_strip:
	dh_strip -Xjulia

override_dh_auto_clean:
	# if we already have a version_git.jl, back that up
	-cp base/version_git.jl base/version_git.jl.backup
	make $(COMMON_FLAGS) cleanall
	make -C deps $(COMMON_FLAGS) distcleanall
	make -C doc cleanall
	rm -rf usr
	# Now copy it back
	-cp base/version_git.jl.backup base/version_git.jl

override_dh_auto_install-arch:
	make $(COMMON_FLAGS) prefix=$(abspath debian/tmp/usr) install
	# Otherwise dh_install does not see debian/tmp/usr
	rm -rf usr


override_dh_auto_install-indep:
