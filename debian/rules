#!/usr/bin/make -f

include /usr/share/dpkg/default.mk

COMMON_FLAGS = VERBOSE=1 MULTIARCH_INSTALL=1 prefix=$(abspath debian/tmp/usr) \
	TAGGED_RELEASE_BANNER="Official http://julialang.org release" \
	NO_GIT=1 USE_BLAS64=0 \
	USE_SYSTEM_PCRE=1 USE_SYSTEM_MPFR=1 USE_SYSTEM_GMP=1 \
	USE_SYSTEM_FFTW=1 USE_SYSTEM_ARPACK=1
	
# ARM doesn't have openblas or grisu packaged, so if we're on i386 or amd64, add those in
ifeq ($(DEB_HOST_ARCH_CPU),i386)
COMMON_FLAGS += MARCH=pentium4
COMMON_FLAGS += USE_SYSTEM_BLAS=1 USE_SYSTEM_LAPACK=1 USE_SYSTEM_GRISU=1
COMMON_FLAGS += LIBBLASNAME=libopenblas.so.0 LIBLAPACKNAME=liblapack.so.3
endif

ifeq ($(DEB_HOST_ARCH_CPU),amd64)
COMMON_FLAGS += MARCH=x86-64
COMMON_FLAGS += USE_SYSTEM_BLAS=1 USE_SYSTEM_LAPACK=1 USE_SYSTEM_GRISU=1
COMMON_FLAGS += LIBBLASNAME=libopenblas.so.0 LIBLAPACKNAME=liblapack.so.3
endif

# Openlibm does not compile on non-x86 archs, so we'll have to use system on those
ifeq (,$(findstring $(DEB_HOST_ARCH_CPU),i386 amd64))
COMMON_FLAGS += USE_SYSTEM_LIBM=1
endif

%:
	dh $@ --parallel

override_dh_auto_build-arch:
	make $(COMMON_FLAGS)
	make $(COMMON_FLAGS) usr/share/doc/julia/helpdb.jl

override_dh_auto_test-arch:
	make $(COMMON_FLAGS) testall

override_dh_strip:
	dh_strip -Xjulia
	# explicitly strip libjulia*
	strip debian/julia/usr/lib/$$(dpkg-architecture -qDEB_HOST_MULTIARCH)/julia/libjulia*.so

override_dh_auto_clean:
	# if we already have a version_git.jl, back that up, same with doc/_build
	-cp base/version_git.jl base/version_git.jl.backup
	-mv doc/_build doc/_build.backup
	make $(COMMON_FLAGS) cleanall
	# Don't distcleanall because we want to keep tarballs and such that we've saved
	make -C deps $(COMMON_FLAGS) cleanall
	rm -f deps/libuv/config.log
	rm -rf usr
	# Clean out .gitignore files
	find . -name .gitignore | xargs -r rm
	# Now the previous files back
	-cp base/version_git.jl.backup base/version_git.jl
	-mv doc/_build.backup doc/_build

override_dh_auto_install-arch:
	make $(COMMON_FLAGS) install
	# Otherwise dh_install does not see debian/tmp/usr
	rm -rf usr

override_dh_auto_install-indep:

override_dh_auto_test-indep:

override_dh_auto_build-indep:

override_dh_compress:
	dh_compress -X.jl
